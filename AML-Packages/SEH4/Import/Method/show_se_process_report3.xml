<AML>
 <Item type="Method" id="5DF482762EA54752B916C15095DBD3BD" action="add">
  <execution_allowed_to keyed_name="Administrators" type="Identity">2618D6F5A90949BAA7E920D1B04C7EE1</execution_allowed_to>
  <method_code><![CDATA[//debugger;
var svgString  = this.apply("SystemReportServer").getResult();
// Parse the string into a DOM structure
const parser = new DOMParser();
const xmlDoc = parser.parseFromString(svgString, "image/svg+xml");
const this_type = this.getType();
const this_id = this.getID();

// Select all elements with the "node" attribute
xmlDoc.querySelectorAll(".graph").forEach(el => {
		el.setAttribute("data-options", "[\"Open Systen\", \"Close Report\"]");	
		el.setAttribute("this_type",this_type);
		el.setAttribute("this_id",this_id);
});

// Select all elements with the "node" attribute
xmlDoc.querySelectorAll(".node").forEach(el => {
		// debugger;
		// set attributes for se_editor, type, id, options for menu
		let node_title = el.childNodes[0];
		let node_id = node_title.textContent.replace("x","");
		let svg_item = this.newItem("SE Process");
		svg_item.setID(node_id);
		svg_item.setAttribute("select","id");
		if (!(svg_item.apply("get").isError())) {
			el.setAttribute("this_type","SE Process");	
			el.setAttribute("data-options", "[\"Refresh\",\"Open\", \"Add Input\",\"Add Output\",  \"New Process\"]");			 
			el.setAttribute("this_id",node_id);
		} 
		else {
			//debugger;
			svg_item.setType("SE Input");
			svg_item.setID(node_id);
			if (!(svg_item.apply("get").isError())) {
				el.setAttribute("this_type","SE Input");	
				el.setAttribute("data-options", "[\"Refresh\",\"Open\", \"Set SE Controlled Item\"]");			
				el.setAttribute("this_id",node_id);
		} 
			else {
				svg_item.setType("SE Output");
				svg_item.setID(node_id);
				if (!(svg_item.apply("get").isError())) {
						el.setAttribute("this_type","SE Output");	
						el.setAttribute("data-options", "[\"Refresh\",\"Open\", \"Set SE Controlled Item\"]");
						el.setAttribute("this_id",node_id);		
				} 
			}
		};		
}); // end of forEach(el)
// Serialize it back to string
const serializer = new XMLSerializer();
const newSvgString = serializer.serializeToString(xmlDoc);
var html = `
<html>
	<head>
	<link rel="stylesheet" href="../Client/customer/se_editor.css">	
    <script src='../Client/customer/panzoom.js'   type='text/javascript' ></script>
    <script src='../Client/customer/se_editor3.1.js' type='text/javascript'></script>
 	</head>
    <body>
	    <script type='text/javascript'>
	        setTimeout(init,400);
	        function init(){
	          var area = document.getElementById('graph0');
		        panzoom(area, {autocenter: true, bounds: true});
						init_contextMenu();
		    }
	    </script>
	    <div>
            <div id="contextMenu" class="context-menu">
        <ul id="menuItems"></ul>
    </div>
`;
html +=  newSvgString;
html += `
		</div>
	</body>
</html>
`;

var options ="status=no,toolbar=no,menubar=no,titlebar=yes,resizable=yes,scrollbars=yes";
//var myWindow = window.open("", "System Report", options);
//myWindow.document.write(html);
//return true;
return html;]]></method_code>
  <method_type>JavaScript</method_type>
  <name>show_se_process_report3</name>
 </Item>
</AML>